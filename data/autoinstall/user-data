#cloud-config
autoinstall:
  version: 1
  identity:
    hostname: placeholder
    username: ubuntu
    password: '$y$j9T$VeMbpOLaT99rQzvoSy7IC/$7nKvOFH3ui63TKFPPbhKOo5lbvXXnPBBlpKjIrF.aCB'
  network:
    version: 2
    ethernets:
      eth0:
        dhcp4: false
        addresses: [PLACEHOLDER_IP/24]
        gateway4: 10.0.0.1
        nameservers:
          addresses: [10.0.0.1]
          search: [xc]
  early-commands:
    - |
      MAC=$(ip -j link | jq -r '.[] | select(.operstate == "UP" and .address) | .address' | head -1)
      ALLOCATION=$(curl -s "http://10.0.0.1/api/allocate?mac=$MAC")
      HOSTNAME=$(echo "$ALLOCATION" | jq -r '.hostname')
      IP=$(echo "$ALLOCATION" | jq -r '.ip')
      sed -i "s/hostname: placeholder/hostname: $HOSTNAME/" /autoinstall.yaml
      sed -i "s/PLACEHOLDER_IP/$IP/" /autoinstall.yaml
  ssh:
    install-server: true
    authorized-keys:
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE1pS94ylBxptsLlfhOcVs6qwicSZhFFqee+3xkN98cv dev@desk1"
  proxy: "http://10.0.0.1:3128"
  snaps:
    - name: microceph
  storage:
    config:
      - type: disk
        id: disk0
        match:
          size: largest
        ptable: gpt
        wipe: superblock
      - type: partition
        id: efi-partition
        device: disk0
        offset: 1048576
        size: 512M
        flag: boot
        grub_device: true
      - type: partition
        id: boot-partition
        device: disk0
        size: 4G
      - type: partition
        id: lvm-partition
        device: disk0
        size: -1
        flag: lvm
      - type: lvm_volgroup
        id: vg0
        name: vg0
        devices:
          - lvm-partition
      - type: lvm_partition
        id: root-lv
        name: root
        volgroup: vg0
        size: 100G
      - type: lvm_partition
        id: ceph-lv
        name: ceph
        volgroup: vg0
        size: -1
      - type: format
        id: efi-fs
        volume: efi-partition
        fstype: fat32
      - type: format
        id: boot-fs
        volume: boot-partition
        fstype: ext4
      - type: format
        id: root-fs
        volume: root-lv
        fstype: ext4
      - type: mount
        id: efi-mount
        device: efi-fs
        path: /boot/efi
      - type: mount
        id: boot-mount
        device: boot-fs
        path: /boot
      - type: mount
        id: root-mount
        device: root-fs
        path: /
  packages:
    - snapd
    - curl
  late-commands:
    # set proxy in environment
    - echo 'http_proxy=http://10.0.0.1:3128' >> /target/etc/environment
    - echo 'https_proxy=http://10.0.0.1:3128' >> /target/etc/environment
    # add ansible key to root authorized_keys
    - mkdir -p /target/root/.ssh
    - curl -s http://10.0.0.1/ansible_ssh_key.pub >> /target/root/.ssh/authorized_keys
    - chmod 700 /target/root/.ssh
    - chmod 600 /target/root/.ssh/authorized_keys
    - chown -R root:root /target/root/.ssh
