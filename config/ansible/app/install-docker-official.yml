---
- name: Install Docker from official Docker repository
  hosts: all
  become: yes
  tasks:
    - name: Remove old Docker packages
      apt:
        name:
          - docker.io
          - docker-compose
          - docker-compose-v2
        state: absent

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key (ASCII armored)
      copy:
        src: files/docker.gpg
        dest: /tmp/docker.gpg.asc
        mode: '0644'

    - name: Import and dearmor Docker GPG key
      shell: gpg --dearmor < /tmp/docker.gpg.asc > /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Set proper permissions on GPG key
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'

    - name: Clean up temporary GPG file
      file:
        path: /tmp/docker.gpg.asc
        state: absent

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker CE and buildx
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add users to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop:
        - "{{ ansible_user }}"
      when: ansible_user is defined

    - name: Verify Docker installation
      command: docker --version
      register: docker_version

    - name: Verify buildx installation
      command: docker buildx version
      register: buildx_version

    - name: Display versions
      debug:
        msg:
          - "Docker version: {{ docker_version.stdout }}"
          - "Buildx version: {{ buildx_version.stdout }}"
