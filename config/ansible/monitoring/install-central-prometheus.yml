---
- name: Install central Prometheus with misc volume storage
  hosts: storage
  become: yes
  
  tasks:
# do this on storage leader
#    - name: Create central Prometheus data directory on misc volume
#      file:
#        path: /rbd/misc/metrics
#        state: directory
#        owner: prometheus
#        group: prometheus
#        mode: '0755'
#
    - name: Configure central Prometheus
      template:
        src: prometheus-central.yml.j2
        dest: /etc/prometheus/prometheus-central.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: restart central prometheus if running

    - name: Create central Prometheus systemd service
      copy:
        dest: /etc/systemd/system/prometheus-central.service
        content: |
          [Unit]
          Description=Prometheus Central (Long-term storage)
          After=network.target
          Wants=network.target

          [Service]
          Type=simple
          User=prometheus
          Group=prometheus
          ExecStart=/usr/bin/prometheus \
            --config.file=/etc/prometheus/prometheus-central.yml \
            --storage.tsdb.path=/rbd/misc/metrics \
            --storage.tsdb.retention.time=90d \
            --storage.tsdb.retention.size=40GB \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries \
            --web.enable-lifecycle \
            --web.listen-address=0.0.0.0:9091 \
            --web.external-url=http://{{ ansible_host }}:9091/
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=ycluster-apps.target
        mode: '0644'
      notify: reload systemd

    - name: Disable central Prometheus service (managed by leader election)
      systemd:
        name: prometheus-central
        enabled: no
        state: stopped
        daemon_reload: yes

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart central prometheus if running
      systemd:
        name: prometheus-central
        state: restarted
      when: ansible_facts.services['prometheus-central.service'].state == 'running'
      failed_when: false
