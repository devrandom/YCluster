---
- name: Install and configure etcd
  hosts: core
  become: yes
  vars:
    etcd_data_dir: "/var/lib/etcd"
    etcd_listen_client_port: 2379
    etcd_listen_peer_port: 2380
    
  tasks:
    - name: Install etcd from apt
      apt:
        name: 
          - etcd-server
          - etcd-client
        state: present
        update_cache: yes

    - name: Ensure etcd data directory has correct permissions
      file:
        path: "{{ etcd_data_dir }}"
        state: directory
        owner: etcd
        group: etcd
        mode: '0700'

    - name: Determine cluster configuration
      set_fact:
        etcd_cluster_size: "{{ groups['core'] | length }}"
        etcd_initial_cluster: "{{ groups['core'] | map('extract', hostvars, 'inventory_hostname') | zip(groups['core'] | map('extract', hostvars, 'ansible_host')) | map('join', '=http://') | map('regex_replace', '$', ':2380') | join(',') }}"

    - name: Check if etcd data directory exists and has data
      stat:
        path: "{{ etcd_data_dir }}/member"
      register: etcd_data_exists

    - name: Check if ANY etcd node in cluster is already running
      shell: |
        ETCDCTL_ENDPOINTS="http://{{ item }}:2379" etcdctl member list --write-out=json
      register: etcd_cluster_check
      failed_when: false
      changed_when: false
      loop: "{{ groups['core'] | map('extract', hostvars, 'ansible_host') | list }}"
      when: not etcd_data_exists.stat.exists

    - name: Determine if cluster already exists
      set_fact:
        cluster_exists: "{{ etcd_cluster_check.results | selectattr('rc', 'equalto', 0) | list | length > 0 }}"
      when: not etcd_data_exists.stat.exists

    - name: Set cluster state
      set_fact:
        etcd_initial_cluster_state: "{{ 'existing' if (cluster_exists | default(false)) else 'new' }}"

    - name: Configure etcd for single node
      copy:
        dest: /etc/default/etcd
        content: |
          ETCD_NAME="{{ inventory_hostname }}"
          ETCD_DATA_DIR="{{ etcd_data_dir }}"
          ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:{{ etcd_listen_client_port }}"
          ETCD_ADVERTISE_CLIENT_URLS="http://{{ ansible_host }}:{{ etcd_listen_client_port }}"
          ETCD_LISTEN_PEER_URLS="http://0.0.0.0:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_ADVERTISE_PEER_URLS="http://{{ ansible_host }}:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_CLUSTER="{{ inventory_hostname }}=http://{{ ansible_host }}:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_CLUSTER_STATE="new"
          ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
        owner: root
        group: root
        mode: '0644'
      when: etcd_cluster_size | int == 1 and not etcd_data_exists.stat.exists
      notify: restart etcd

    - name: Configure etcd for multi-node cluster (new cluster)
      copy:
        dest: /etc/default/etcd
        content: |
          ETCD_NAME="{{ inventory_hostname }}"
          ETCD_DATA_DIR="{{ etcd_data_dir }}"
          ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:{{ etcd_listen_client_port }}"
          ETCD_ADVERTISE_CLIENT_URLS="http://{{ ansible_host }}:{{ etcd_listen_client_port }}"
          ETCD_LISTEN_PEER_URLS="http://0.0.0.0:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_ADVERTISE_PEER_URLS="http://{{ ansible_host }}:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_CLUSTER="{{ etcd_initial_cluster }}"
          ETCD_INITIAL_CLUSTER_STATE="new"
          ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
        owner: root
        group: root
        mode: '0644'
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'new' and not etcd_data_exists.stat.exists
      notify: restart etcd


    - name: Get existing cluster members for joining node
      shell: |
        ETCDCTL_ENDPOINTS="http://{{ item }}:2379" \
        etcdctl member list --write-out=json
      register: existing_members_result
      failed_when: false
      loop: "{{ groups['core'] | map('extract', hostvars, 'ansible_host') | list }}"
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists

    - name: Extract successful member list
      set_fact:
        existing_members_json: "{{ existing_members_result.results | selectattr('rc', 'equalto', 0) | first }}"
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists

    - name: Build initial cluster string for joining node
      set_fact:
        etcd_join_cluster: "{{ (existing_members_json.stdout | from_json).members | map(attribute='name') | zip((existing_members_json.stdout | from_json).members | map(attribute='peerURLs') | map('first')) | map('join', '=') | join(',') }},{{ inventory_hostname }}=http://{{ ansible_host }}:{{ etcd_listen_peer_port }}"
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists

    - name: Configure etcd for joining existing cluster
      copy:
        dest: /etc/default/etcd
        content: |
          ETCD_NAME="{{ inventory_hostname }}"
          ETCD_DATA_DIR="{{ etcd_data_dir }}"
          ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:{{ etcd_listen_client_port }}"
          ETCD_ADVERTISE_CLIENT_URLS="http://{{ ansible_host }}:{{ etcd_listen_client_port }}"
          ETCD_LISTEN_PEER_URLS="http://0.0.0.0:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_ADVERTISE_PEER_URLS="http://{{ ansible_host }}:{{ etcd_listen_peer_port }}"
          ETCD_INITIAL_CLUSTER="{{ etcd_join_cluster }}"
          ETCD_INITIAL_CLUSTER_STATE="existing"
          ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
        owner: root
        group: root
        mode: '0644'
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists
      notify: restart etcd

    - name: Find working etcd node for member operations
      set_fact:
        working_etcd_host: "{{ existing_members_result.results | selectattr('rc', 'equalto', 0) | map(attribute='item') | first }}"
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists

    - name: Add member to existing etcd cluster using etcdctl
      shell: |
        ETCDCTL_ENDPOINTS="http://{{ working_etcd_host }}:2379" \
        etcdctl member add "{{ inventory_hostname }}" \
        --peer-urls="http://{{ ansible_host }}:{{ etcd_listen_peer_port }}"
      register: add_member_result
      failed_when: add_member_result.rc != 0
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists
      delegate_to: "{{ working_etcd_host }}"

    - name: Wait a moment after adding member
      pause:
        seconds: 2
      when: etcd_cluster_size | int > 1 and etcd_initial_cluster_state == 'existing' and not etcd_data_exists.stat.exists

    - name: Flush handlers to restart etcd immediately
      meta: flush_handlers

    - name: Enable etcd service
      systemd:
        name: etcd
        enabled: yes
        daemon_reload: yes

    - name: Start etcd service (non-blocking)
      systemd:
        name: etcd
        state: started
      async: 0
      poll: 0

    - name: Wait for etcd to be ready
      wait_for:
        port: "{{ etcd_listen_client_port }}"
        host: "{{ ansible_host }}"
        timeout: 30

    - name: Display etcd cluster information
      debug:
        msg: |
          etcd cluster configured with {{ etcd_cluster_size }} node(s)
          Node: {{ inventory_hostname }}
          Client URL: http://{{ ansible_host }}:{{ etcd_listen_client_port }}

  handlers:
    - name: restart etcd
      systemd:
        name: etcd
        state: restarted
