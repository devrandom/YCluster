---
- name: Setup Gateway VIP with Keepalived
  hosts: core
  become: yes
  vars:
    gateway_vip: "10.0.0.254"
    gateway_interface: "{{ cluster_interface }}"
    vip_metric: 500  # Higher than DHCP default (100)
    
  tasks:
    - name: Install keepalived and iptables-persistent
      apt:
        name:
          - keepalived
          - iptables-persistent
        state: present
      tags:
        - packages

    - name: Create cluster scripts directory
      file:
        path: /usr/local/lib/cluster
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Create gateway health check script
      copy:
        dest: /usr/local/lib/cluster/check-gateway-health
        mode: '0755'
        content: |
          #!/bin/bash
          
          unset http_proxy
          unset https_proxy
          
          # Test internet connectivity by binding to the uplink interface
          # This will fail if interface doesn't exist, is down, or has no connectivity
          if ! curl -s --connect-timeout 5 --max-time 10 --interface "{{ uplink_interface }}" http://detectportal.firefox.com/success.txt | grep -q "success"; then
              echo "No internet connectivity via uplink interface {{ uplink_interface }}"
              exit 1
          fi
          
          echo "Gateway healthy - internet accessible via {{ uplink_interface }}"
          exit 0

    - name: Create NAT setup script
      copy:
        dest: /usr/local/lib/cluster/setup-gateway-nat
        mode: '0755'
        content: |
          #!/bin/bash
          
          # Get the interface with default route (uplink interface)
          UPLINK_IFACE=$(ip route get 8.8.8.8 | grep -oP 'dev \K\S+')
          
          if [ -z "$UPLINK_IFACE" ]; then
              echo "No uplink interface found"
              exit 1
          fi
          
          # Enable IP forwarding
          echo 1 > /proc/sys/net/ipv4/ip_forward
          
          # Add NAT rule for cluster network
          iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o $UPLINK_IFACE -j MASQUERADE
          
          # Allow forwarding for cluster network
          iptables -A FORWARD -s 10.0.0.0/24 -j ACCEPT
          iptables -A FORWARD -d 10.0.0.0/24 -m state --state RELATED,ESTABLISHED -j ACCEPT
          
          # Save iptables rules
          iptables-save > /etc/iptables/rules.v4
          
          echo "NAT configured for interface $UPLINK_IFACE"

    - name: Create NAT cleanup script
      copy:
        dest: /usr/local/lib/cluster/cleanup-gateway-nat
        mode: '0755'
        content: |
          #!/bin/bash
          
          # Remove NAT rules
          iptables -t nat -D POSTROUTING -s 10.0.0.0/24 -o $(ip route get 8.8.8.8 | grep -oP 'dev \K\S+') -j MASQUERADE 2>/dev/null || true
          
          # Remove forwarding rules
          iptables -D FORWARD -s 10.0.0.0/24 -j ACCEPT 2>/dev/null || true
          iptables -D FORWARD -d 10.0.0.0/24 -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null || true
          
          # Save iptables rules
          iptables-save > /etc/iptables/rules.v4
          
          echo "NAT rules cleaned up"

    - name: Enable IP forwarding permanently
      lineinfile:
        path: /etc/sysctl.conf
        line: 'net.ipv4.ip_forward=1'
        regexp: '^#?net\.ipv4\.ip_forward'
        state: present

    - name: Apply sysctl changes
      command: sysctl -p

    - name: Ensure keepalived conf.d directory exists
      file:
        path: /etc/keepalived/conf.d
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Create gateway VIP keepalived configuration
      copy:
        dest: /etc/keepalived/conf.d/gateway-vip.conf
        content: |
          global_defs {
              router_id {{ inventory_hostname }}_gateway
              script_user root
              enable_script_security
          }
          
          vrrp_script chk_gateway {
              script "/usr/local/lib/cluster/check-gateway-health"
              interval 10
              weight -20
              fall 2
              rise 2
          }
          
          vrrp_instance VI_GATEWAY {
              state BACKUP
              interface {{ gateway_interface }}
              virtual_router_id 254
              priority {{ 100 + (inventory_hostname[-1] | int) }}
              preempt
              advert_int 1
              authentication {
                  auth_type PASS
                  auth_pass xcluster
              }
              virtual_ipaddress {
                  {{ gateway_vip }}/24
              }
              track_script {
                  chk_gateway
              }
              notify_master "/usr/local/lib/cluster/setup-gateway-nat"
              notify_backup "/usr/local/lib/cluster/cleanup-gateway-nat"
              notify_fault "/usr/local/lib/cluster/cleanup-gateway-nat"
          }
      notify: restart keepalived

    - name: Create main keepalived configuration
      copy:
        dest: /etc/keepalived/keepalived.conf
        content: |
          include /etc/keepalived/conf.d/*.conf
      notify: restart keepalived

    - name: Add backup gateway route to all nodes
      command: ip route add default via {{ gateway_vip }} metric {{ vip_metric }}
      ignore_errors: yes  # May already exist
      
    - name: Make backup gateway route persistent
      lineinfile:
        path: /etc/rc.local
        line: 'ip route add default via {{ gateway_vip }} metric {{ vip_metric }} 2>/dev/null || true'
        insertbefore: 'exit 0'
        create: yes
        mode: '0755'

    - name: Ensure rc.local has shebang
      lineinfile:
        path: /etc/rc.local
        line: '#!/bin/bash'
        insertbefore: BOF
        create: yes
        mode: '0755'

    - name: Ensure rc.local ends with exit 0
      lineinfile:
        path: /etc/rc.local
        line: 'exit 0'
        create: yes
        mode: '0755'

    - name: Enable and start keepalived
      systemd:
        name: keepalived
        enabled: yes
        state: started

  handlers:
    - name: restart keepalived
      systemd:
        name: keepalived
        state: restarted
