---
- name: Setup keepalived for admin services VIP
  hosts: s1,s2,s3
  become: yes
  vars:
    vip_address: "10.0.0.1"
    vip_interface: "{{ ansible_default_ipv4.interface }}"
    
  tasks:
    - name: Install keepalived
      apt:
        name: keepalived
        state: present
        update_cache: yes

    - name: Configure keepalived
      copy:
        dest: /etc/keepalived/keepalived.conf
        content: |
          global_defs {
              router_id {{ inventory_hostname }}
          }
          
          vrrp_script check_services {
              script "/usr/local/bin/check-admin-services.sh"
              interval 2
              weight 10
              fall 2
              rise 2
          }
          
          vrrp_instance ADMIN_VIP {
              state BACKUP
              interface {{ vip_interface }}
              virtual_router_id 51
              priority {{ 100 - (groups['all'].index(inventory_hostname) * 10) }}
              advert_int 1
              
              authentication {
                  auth_type PASS
                  auth_pass admin123
              }
              
              virtual_ipaddress {
                  {{ vip_address }}/24 dev {{ vip_interface }} label {{ vip_interface }}:vip
              }
              
              track_script {
                  check_services
              }
              
              notify_master "/usr/local/bin/vip-notify.sh master"
              notify_backup "/usr/local/bin/vip-notify.sh backup"
              notify_fault "/usr/local/bin/vip-notify.sh fault"
          }
      notify: restart keepalived

    - name: Create service check script
      copy:
        dest: /usr/local/bin/check-admin-services.sh
        mode: '0755'
        content: |
          #!/bin/bash
          
          # Check if allocation API is responding
          if ! curl -s -f http://localhost/api/health > /dev/null 2>&1; then
              exit 1
          fi
          
          # Check if nginx is running
          if ! systemctl is-active --quiet nginx; then
              exit 1
          fi
          
          exit 0

    - name: Create VIP notification script
      copy:
        dest: /usr/local/bin/vip-notify.sh
        mode: '0755'
        content: |
          #!/bin/bash
          
          STATE=$1
          
          case $STATE in
              master)
                  logger "Keepalived: Becoming MASTER for admin VIP"
                  # Update etcd with current master
                  curl -s -X PUT http://localhost:2379/v3/kv/put \
                    -d '{"key":"'$(echo -n "/cluster/admin/active-node" | base64)'","value":"'$(echo -n "{{ inventory_hostname }}" | base64)'"}'
                  ;;
              backup)
                  logger "Keepalived: Becoming BACKUP for admin VIP"
                  ;;
              fault)
                  logger "Keepalived: FAULT state for admin VIP"
                  ;;
          esac

    - name: Enable and start keepalived
      systemd:
        name: keepalived
        enabled: yes
        state: started
        daemon_reload: yes

  handlers:
    - name: restart keepalived
      systemd:
        name: keepalived
        state: restarted
