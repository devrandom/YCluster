---
- name: Setup encrypted secrets volume
  hosts: storage
  become: yes
  vars:
    vault_volume_name: "secrets"
    vault_volume_size: "1G"
    vault_mount_point: "/secrets"
    vault_device_path: "/dev/vg0/{{ vault_volume_name }}"
    vault_mapper_name: "{{ vault_volume_name }}"
    vault_mapper_path: "/dev/mapper/{{ vault_mapper_name }}"
  
  tasks:
    - name: Install cryptsetup package
      apt:
        name: cryptsetup
        state: present

    - name: Check if logical volume exists
      command: lvs {{ vault_device_path }}
      register: lv_check
      failed_when: false
      changed_when: false

    - name: Create logical volume for secrets
      command: lvcreate -L {{ vault_volume_size }} -n {{ vault_volume_name }} vg0
      when: lv_check.rc != 0

    - name: Check if LUKS device is already formatted
      command: cryptsetup isLuks {{ vault_device_path }}
      register: luks_check
      failed_when: false
      changed_when: false

    - name: Create temporary password file
      copy:
        content: "{{ vault_secrets_volume_key }}"
        dest: /dev/shm/luks_password
        mode: '0600'
      when: luks_check.rc != 0
      no_log: true

    - name: Format device with LUKS encryption
      command: cryptsetup luksFormat --batch-mode --key-file /dev/shm/luks_password {{ vault_device_path }}
      when: luks_check.rc != 0
      no_log: true

    - name: Remove temporary password file
      file:
        path: /dev/shm/luks_password
        state: absent
      when: luks_check.rc != 0

    - name: Check if LUKS device is already open
      stat:
        path: "{{ vault_mapper_path }}"
      register: mapper_check

    - name: Create temporary password file for opening
      copy:
        content: "{{ vault_secrets_volume_key }}"
        dest: /dev/shm/luks_password_open
        mode: '0600'
      when: not mapper_check.stat.exists
      no_log: true

    - name: Open LUKS device
      command: cryptsetup luksOpen --key-file /dev/shm/luks_password_open {{ vault_device_path }} {{ vault_mapper_name }}
      when: not mapper_check.stat.exists
      no_log: true

    - name: Remove temporary password file for opening
      file:
        path: /dev/shm/luks_password_open
        state: absent
      when: not mapper_check.stat.exists

    - name: Check if filesystem exists on mapper device
      command: blkid {{ vault_mapper_path }}
      register: fs_check
      failed_when: false
      changed_when: false

    - name: Create ext4 filesystem on encrypted device
      filesystem:
        fstype: ext4
        dev: "{{ vault_mapper_path }}"
      when: fs_check.rc != 0

    - name: Check if mount point is already mounted
      command: mountpoint -q "{{ vault_mount_point }}"
      register: mount_check
      failed_when: false
      changed_when: false

    - name: Create mount point directory
      file:
        path: "{{ vault_mount_point }}"
        state: directory
        mode: '0700'
        owner: root
        group: root
      when: mount_check.rc != 0

    - name: Mount encrypted volume
      mount:
        path: "{{ vault_mount_point }}"
        src: "{{ vault_mapper_path }}"
        fstype: ext4
        state: mounted
        opts: defaults,noatime

    - name: Set permissions on secrets directory
      file:
        path: "{{ vault_mount_point }}"
        mode: '0701'
        owner: root
        group: root
